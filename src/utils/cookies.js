/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å cookies
 */

import { getConfig } from '@edx/frontend-platform';

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ cookie –ø–æ –∏–º–µ–Ω–∏
 * @param {string} name - –∏–º—è cookie
 * @returns {string|null} –∑–Ω–∞—á–µ–Ω–∏–µ cookie –∏–ª–∏ null
 */
export const getCookie = (name) => {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) {
    return parts.pop().split(';').shift();
  }
  return null;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–Ω–µ–≤–æ–π –¥–æ–º–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ cookies
 * @returns {string} –¥–æ–º–µ–Ω –¥–ª—è cookies –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è localhost
 */
export const getCookieDomain = () => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é OpenedX –¥–ª—è –¥–æ–º–µ–Ω–∞ cookies (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞)
  const configuredDomain = getConfig().SESSION_COOKIE_DOMAIN;
  
  if (configuredDomain && configuredDomain !== null && configuredDomain !== '') {
    console.log(`Cookie domain: Using configured domain - ; domain=${configuredDomain}`);
    return `; domain=${configuredDomain}`;
  }
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
  const hostname = window.location.hostname;
  
  // –î–ª—è localhost –∏ IP –∞–¥—Ä–µ—Å–æ–≤ –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–µ–Ω
  if (hostname === 'localhost' || hostname === '127.0.0.1' || hostname.startsWith('192.168.')) {
    console.log('Cookie domain: localhost/IP (no domain)');
    return '';
  }
  
  // –†–∞–∑–¥–µ–ª—è–µ–º hostname –Ω–∞ —á–∞—Å—Ç–∏
  const parts = hostname.split('.');
  
  // –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 2 —á–∞—Å—Ç–µ–π, —Ç–æ —ç—Ç–æ –Ω–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω
  if (parts.length < 2) {
    console.log('Cookie domain: invalid hostname, no domain');
    return '';
  }
  
  let domain = '';
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è OpenedX –¥–æ–º–µ–Ω–æ–≤
  if (parts.length >= 3) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã OpenedX
    for (let i = 0; i < parts.length - 1; i++) {
      if (parts[i] === 'openedx') {
        // –ù–∞–π–¥–µ–Ω openedx –≤ –¥–æ–º–µ–Ω–µ - –±–µ—Ä–µ–º –æ—Ç openedx –¥–æ –∫–æ–Ω—Ü–∞
        domain = `; domain=.${parts.slice(i).join('.')}`;
        console.log(`Cookie domain: OpenedX pattern detected - ${domain}`);
        return domain;
      }
    }
    
    // –ï—Å–ª–∏ openedx –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (hostname.includes('local.openedx.io')) {
      domain = `; domain=.local.openedx.io`;
      console.log(`Cookie domain: Local OpenedX development - ${domain}`);
      return domain;
    }
  }
  
  // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å—Ç–∏ (domain.tld)
  if (parts.length >= 2) {
    domain = `; domain=.${parts.slice(-2).join('.')}`;
    console.log(`Cookie domain: Standard domain - ${domain}`);
    return domain;
  }
  
  console.log('Cookie domain: fallback, no domain');
  return '';
};

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å cookie
 * @param {string} name - –∏–º—è cookie
 * @param {string} value - –∑–Ω–∞—á–µ–Ω–∏–µ cookie
 * @param {number} days - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 365)
 */
export const setCookie = (name, value, days = 365) => {
  const expires = new Date();
  expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
  
  const domain = getCookieDomain();
  
  document.cookie = `${name}=${value}; expires=${expires.toUTCString()}; path=/${domain}; SameSite=Lax`;
};

/**
 * –£–¥–∞–ª–∏—Ç—å cookie
 * @param {string} name - –∏–º—è cookie
 */
export const deleteCookie = (name) => {
  const domain = getCookieDomain();
  
  // –£–¥–∞–ª—è–µ–º cookie –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/${domain};`;
  
  // –¢–∞–∫–∂–µ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å cookie –±–µ–∑ –¥–æ–º–µ–Ω–∞ (–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö cookies)
  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
};

/**
 * –û—á–∏—Å—Ç–∏—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–µ cookies —è–∑—ã–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
 * –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ cookies —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
 */
export const cleanupDuplicateCookies = () => {
  const cookieName = 'openedx-language-preference';
  const currentValue = getCookie(cookieName);
  
  console.log('üßπ Starting aggressive cookie cleanup...');
  console.log('Current cookie value:', currentValue);
  
  // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π cookie —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
  deleteCookie(cookieName);
  
  // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ cookies
  const hostname = window.location.hostname;
  const aggressiveCleanupDomains = [];
  
  if (hostname.includes('.')) {
    const parts = hostname.split('.');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
    for (let i = 0; i < parts.length; i++) {
      if (i < parts.length - 1) {
        // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å —Ç–æ—á–∫–æ–π –≤ –Ω–∞—á–∞–ª–µ (.domain.tld, .sub.domain.tld)
        aggressiveCleanupDomains.push(`.${parts.slice(i).join('.')}`);
        
        // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –±–µ–∑ —Ç–æ—á–∫–∏ (domain.tld, sub.domain.tld)
        aggressiveCleanupDomains.push(parts.slice(i).join('.'));
      }
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å–ª—É—á–∞—è apps.openedx.orleu.edu.kz
    if (hostname.includes('openedx.orleu.edu.kz')) {
      aggressiveCleanupDomains.push('apps.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('.apps.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('studio.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('.studio.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('preview.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('.preview.openedx.orleu.edu.kz');
      aggressiveCleanupDomains.push('.orleu.edu.kz'); // —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π hostname
    aggressiveCleanupDomains.push(hostname);
  }
  
  // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
  const uniqueDomains = [...new Set(aggressiveCleanupDomains)];
  
  console.log('üóëÔ∏è Attempting to delete cookies for domains:', uniqueDomains);
  
  // –£–¥–∞–ª—è–µ–º cookies –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
  uniqueDomains.forEach(domain => {
    // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
    document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${domain};`;
    
    // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å SameSite=Lax (–∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º cookie)
    document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${domain}; SameSite=Lax;`;
    
    // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å SameSite=None (–∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º cookie)
    document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${domain}; SameSite=None;`;
    
    console.log(`üí£ Nuked cookie for domain: ${domain}`);
  });
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –¥–æ–º–µ–Ω–∞
  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Lax;`;
  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=None;`;
  
  console.log('üî• Performed final cleanup without domain specification');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π cookie —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  if (currentValue) {
    setCookie(cookieName, currentValue);
    console.log('‚úÖ Set new cookie with proper domain:', currentValue);
  } else {
    console.log('‚ÑπÔ∏è No previous value found, skipping cookie restoration');
  }
  
  console.log('üéØ Aggressive cookie cleanup completed');
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string[]} supportedLocales - –º–∞—Å—Å–∏–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –ª–æ–∫–∞–ª–µ–π
 * @returns {string} –∫–æ–¥ —è–∑—ã–∫–∞
 */
export const getPreferredLanguage = (supportedLocales = ['en', 'ru', 'kk-kz']) => {
  const cookieName = 'openedx-language-preference';
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º cookie (–ü–†–ò–û–†–ò–¢–ï–¢ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  const cookieLocale = getCookie(cookieName);
  if (cookieLocale && supportedLocales.includes(cookieLocale)) {
    console.log('Using language from cookie:', cookieLocale);
    return cookieLocale;
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç cookie)
  const urlParams = new URLSearchParams(window.location.search);
  const urlLocale = urlParams.get('locale');
  if (urlLocale && supportedLocales.includes(urlLocale)) {
    console.log('Using language from URL (no cookie found):', urlLocale);
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ cookie —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ –±—ã–ª–æ
    setCookie(cookieName, urlLocale);
    return urlLocale;
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π —è–∑—ã–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞)
  const browserLang = navigator.language || navigator.userLanguage;
  if (browserLang) {
    const browserLocale = browserLang.toLowerCase();
    // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if (supportedLocales.includes(browserLocale)) {
      console.log('Using browser language:', browserLocale);
      setCookie(cookieName, browserLocale);
      return browserLocale;
    }
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –ª–æ–∫–∞–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'ru' –∏–∑ 'ru-RU')
    const baseLang = browserLocale.split('-')[0];
    if (supportedLocales.includes(baseLang)) {
      console.log('Using browser base language:', baseLang);
      setCookie(cookieName, baseLang);
      return baseLang;
    }
  }
  
  // 4. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
  console.log('Using default language: en');
  return 'en';
};
